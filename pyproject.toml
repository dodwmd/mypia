[tool.poetry]
name = "mypia"
version = "0.1.0"
description = "A personal AI assistant using public LLMs and local vector database"
authors = ["Michael Dodwell <michael@dodwell.us>"]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.3"
rich = "^10.0.0"
pydantic = "^1.10.7"
python-dotenv = "^1.0.0"
imapclient = "^2.3.1"
caldav = "^1.3.0"
trafilatura = "^1.4.1"
spacy = "^3.5.2"
sqlalchemy = "^1.4.0"
celery = "^5.2.7"
redis = "^4.5.5"
chromadb = "^0.3.23"
sentence-transformers = "^2.2.2"
pygithub = "^1.58.2"
llama-cpp-python = "^0.1.50"
numpy = "^1.21.0"
aioimaplib = "^1.0.0"
aiosmtplib = "^2.0.1"
aiohttp = "^3.8.1"
sphinx = "^6.2.1"
sphinx-rtd-theme = "^1.0.0"

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
black = "^23.3.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
sphinx = "^6.2.1"
pytest-asyncio = "^0.19.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
mypia = "personal_ai_assistant.cli:cli"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--cov=personal_ai_assistant --cov-report=term-missing --cov-report=xml"

[tool.coverage.run]
source = ["personal_ai_assistant"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
