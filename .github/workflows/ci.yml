name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        activate-environment: mypia
        environment-file: config/environment.yml
        auto-activate-base: false
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda activate mypia
        poetry install
    - name: Run tests with coverage
      shell: bash -l {0}
      run: |
        conda activate mypia
        poetry run pytest --cov=personal_ai_assistant --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    - name: Run linters and type checkers
      shell: bash -l {0}
      run: |
        conda activate mypia
        poetry run black --check .
        poetry run flake8 .
        poetry run mypy .

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1.152.0
      with:
        ruby-version: 2.7
    - name: Install dependencies
      run: |
        cd docs
        bundle install
    - name: Build site
      run: |
        cd docs
        bundle exec jekyll build
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3.9.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_site
