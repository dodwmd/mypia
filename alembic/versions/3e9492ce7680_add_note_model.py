"""Add Note model

Revision ID: 3e9492ce7680
Revises: 721dea827a91
Create Date: 2024-09-16 22:47:25.767098

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3e9492ce7680'
down_revision: Union[str, None] = '721dea827a91'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_preferences')
    op.drop_index('ix_emails_id', table_name='emails')
    op.drop_index('ix_emails_subject', table_name='emails')
    op.drop_table('emails')
    op.drop_index('ix_calendar_events_id', table_name='calendar_events')
    op.drop_index('ix_calendar_events_title', table_name='calendar_events')
    op.drop_table('calendar_events')
    op.drop_index('ix_contact_submissions_email', table_name='contact_submissions')
    op.drop_index('ix_contact_submissions_id', table_name='contact_submissions')
    op.drop_index('ix_contact_submissions_name', table_name='contact_submissions')
    op.drop_table('contact_submissions')
    op.drop_index('ix_tasks_id', table_name='tasks')
    op.drop_index('ix_tasks_title', table_name='tasks')
    op.drop_table('tasks')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    op.create_index('ix_tasks_title', 'tasks', ['title'], unique=False)
    op.create_index('ix_tasks_id', 'tasks', ['id'], unique=False)
    op.create_table('contact_submissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='contact_submissions_pkey')
    )
    op.create_index('ix_contact_submissions_name', 'contact_submissions', ['name'], unique=False)
    op.create_index('ix_contact_submissions_id', 'contact_submissions', ['id'], unique=False)
    op.create_index('ix_contact_submissions_email', 'contact_submissions', ['email'], unique=False)
    op.create_table('calendar_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='calendar_events_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='calendar_events_pkey')
    )
    op.create_index('ix_calendar_events_title', 'calendar_events', ['title'], unique=False)
    op.create_index('ix_calendar_events_id', 'calendar_events', ['id'], unique=False)
    op.create_table('emails',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('body', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sent_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='emails_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='emails_pkey')
    )
    op.create_index('ix_emails_subject', 'emails', ['subject'], unique=False)
    op.create_index('ix_emails_id', 'emails', ['id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('key', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_preferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_preferences_pkey')
    )
    # ### end Alembic commands ###
